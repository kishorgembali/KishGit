{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "twcadf"
		},
		"twcadfsqldb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'twcadfsqldb'"
		},
		"twcinputblob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'twcinputblob'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/twcadfsqldb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('twcadfsqldb_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/twcinputblob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('twcinputblob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/inputcsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "twcinputblob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"inputfilename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().inputfilename",
							"type": "Expression"
						},
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Make",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "Origin",
						"type": "String"
					},
					{
						"name": "DriveTrain",
						"type": "String"
					},
					{
						"name": "Length",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/twcinputblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/moviesin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "twcinputblob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "adf-movies.csv",
						"container": "flowinput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movieId",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/twcinputblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/moviesout')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "twcinputblob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "flowoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/twcinputblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/twclsdb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "twcadfsqldb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Make",
						"type": "nvarchar"
					},
					{
						"name": "Model",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "Origin",
						"type": "nvarchar"
					},
					{
						"name": "DriveTrain",
						"type": "nvarchar"
					},
					{
						"name": "Length",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/twcadfsqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/twcblobtosql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "carscsvtosql",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from cars",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Make",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Make",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Origin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Origin",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DriveTrain",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DriveTrain",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Length",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Length",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "inputcsv",
								"type": "DatasetReference",
								"parameters": {
									"inputfilename": "cars-adf.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "twclsdb",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "dbo.cars"
								}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-07-10T11:17:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/inputcsv')]",
				"[concat(variables('factoryId'), '/datasets/twclsdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/moviewdf')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "moviesin",
								"type": "DatasetReference"
							},
							"name": "movies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "moviesout",
								"type": "DatasetReference"
							},
							"name": "moviesout"
						},
						{
							"dataset": {
								"referenceName": "moviesout",
								"type": "DatasetReference"
							},
							"name": "moviesbyyear"
						}
					],
					"transformations": [
						{
							"name": "getyear"
						},
						{
							"name": "aggbyyear"
						}
					],
					"script": "source(output(\n\t\tmovieId as string,\n\t\ttitle as string,\n\t\tgenres as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> movies\nmovies derive(Year = toInteger(trim(right(title, 6), '()')),\n\t\ttitle = toString(left(title,length(title)-6))) ~> getyear\ngetyear aggregate(groupBy(Year),\n\tmoviecount = count()) ~> aggbyyear\ngetyear sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['moviesfinal.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> moviesout\naggbyyear sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['moviesbyyear'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> moviesbyyear"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/moviesin')]",
				"[concat(variables('factoryId'), '/datasets/moviesout')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/twcmoviewadf')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "moviespl",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "moviewdf",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"movies": {},
									"moviesout": {},
									"moviesbyyear": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-07-10T13:11:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/moviewdf')]"
			]
		}
	]
}